<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                      http://www.springframework.org/schema/beans/spring-beans.xsd
					  http://www.springframework.org/schema/security/oauth2
					  http://www.springframework.org/schema/security/spring-security-oauth2.xsd
					  http://www.springframework.org/schema/context
					  http://www.springframework.org/schema/context/spring-context.xsd
					  http://www.springframework.org/schema/security
					  http://www.springframework.org/schema/security/spring-security.xsd">

	<bean id="tokenStore"
		class="org.springframework.security.oauth2.provider.token.store.JdbcTokenStore">
		<constructor-arg name="dataSource" ref="oauthDataSource" />
	</bean>

	<bean id="tokenServices"
		class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="tokenStore" ref="tokenStore" />
		<property name="clientDetailsService" ref="clientDetailsService" />
	</bean>
	
	<bean id="clientDetailsService" class="org.springframework.security.oauth2.provider.client.JdbcClientDetailsService">
		<constructor-arg name="dataSource" ref="oauthDataSource" />
	</bean>
	
	<bean id="springTokenService"
		class="org.shovelgame.spring.oauth.SpringTokenService" 
		p:tokenService-ref="tokenServices" 
		p:tokenStore-ref="tokenStore"
		p:clientDetails-ref="clientDetailsService" />
		
	<bean id="authenticationEntryPoint"
		class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<property name="realmName" value="atlant-taxi" />
	</bean>
	
	<bean id="oauthAccessDeniedHandler"
		class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />
		
	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter" />
				<bean class="org.springframework.security.access.vote.RoleVoter" />
				<bean class="org.springframework.security.access.vote.RoleVoter" p:rolePrefix="DEVICE_"/>
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</constructor-arg>
	</bean>
	
	<!-- This is not actually used, but it's required by Spring Security -->
	<sec:authentication-manager alias="authenticationManager" />
	<oauth:expression-handler id="oauthExpressionHandler" />
	<oauth:web-expression-handler id="oauthWebExpressionHandler" />
	<sec:global-method-security
		pre-post-annotations="enabled" proxy-target-class="true">
		<sec:expression-handler ref="oauthExpressionHandler" />
	</sec:global-method-security>
	<oauth:resource-server id="oauthResourceFilter"
		resource-id="oauthAtlantTaxi" token-services-ref="tokenServices" />
	

	<sec:http 
		pattern="/ws/**" 
		create-session="never"
		entry-point-ref="authenticationEntryPoint"
		access-decision-manager-ref="accessDecisionManager">
		<sec:anonymous enabled="false" />
		
		<sec:intercept-url pattern="/ws/resources/**" access="ROLE_PLAYER" />
		<sec:intercept-url pattern="/ws/**" access="SCOPE_READ" method="GET" />
		<sec:intercept-url pattern="/ws/**" access="SCOPE_WRITE" />
		
		<sec:custom-filter ref="oauthResourceFilter" before="PRE_AUTH_FILTER" />
		<sec:access-denied-handler ref="oauthAccessDeniedHandler" />
		<sec:expression-handler ref="oauthWebExpressionHandler" />
	</sec:http>

</beans>
